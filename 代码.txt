###在predict.py加入print(logit)，过程中输出test_hiv1.out记录文件
sed -i '1d' test_hiv1.out #删除第一行
perl again_split_logit.pl test_hiv1.out > hiv1_format.txt  ###print(logit)结果的格式整理，行数为reads数，列数为20，是label数（也是输出的20个z值）
perl throw.pl hiv1_format.txt predict_hiv1_with_z.txt > hiv1_mav.txt  #留下预测结果正确的reads，找到20个中最大的那个z值，记下它属于哪个label
perl again_mav.pl hiv1_mav.txt > numbers_for_weibull.csv  ###输出的每一行是一个label的20个MAV（距离均值最远的20个点），这个文件用于R软件进行weibull三参数拟合

——————————————————————————————————————————————————————————————————————————————————————————————————————————————————
####在R软件或matlab或spicy都可以进行三参数拟合，这里的代码粘贴进R软件的主界面

EPS = sqrt(.Machine$double.eps) # "epsilon" for very small numbers
llik.weibull <- function(shape, scale, thres, x)
{ 
  sum(dweibull(x - thres, shape, scale, log=T))
}
thetahat.weibull <- function(x)
{ 
  if(any(x <= 0)) stop("x values must be positive")
  toptim <- function(theta) -llik.weibull(theta[1], theta[2], theta[3], x)
  mu = mean(log(x))
  sigma2 = var(log(x))
  shape.guess = 1.2 / sqrt(sigma2)
  scale.guess = exp(mu + (0.572 / shape.guess))
  thres.guess = 1
  res = nlminb(c(shape.guess, scale.guess, thres.guess), toptim, lower=EPS)
  c(shape=res$par[1], scale=res$par[2], thres=res$par[3])
}


sink("D:/weibull_before_format.txt") ###生成输出的目标文件
divdata=read.csv("D:/numbers_for_weibull.csv", header=FALSE)  ###读取刚才输出的文件
x <- as.numeric(as.character(divdata[1,]))  ####change the number from 1 to 20 to get 20 weibull parameters
r<-na.omit(x)
thetahat.weibull(r)

x <- as.numeric(as.character(divdata[2,]))  ####change the number from 1 to 20 to get 20 weibull parameters
r<-na.omit(x)
thetahat.weibull(r)
.
.
.
x <- as.numeric(as.character(divdata[20,]))  ####change the number from 1 to 20 to get 20 weibull parameters
r<-na.omit(x)
thetahat.weibull(r)

sink()  ###关闭输出的文件，得到结果。
___________________________________________________________________________________________________________________
###粘贴指令
perl format_mav_result.pl weibull_before_format.txt > weibull_20num.txt
perl v4_again_compute.pl weibull_20num.txt hiv1_again.txt > hiv1_prob.txt ####先运行你的true data，得到计算F-meature需要的参数，注意这一步后the_parameter.txt文件应当只有一行数值。
perl v4_again_compute.pl weibull_20num.txt ecoli1_again.txt > ecoli1_prob.txt  ####再运行多种false data
###如果生成了 v4_the_acc_095_to_01_250bp.txt文件，里面第一列是输入文件的名称（如HIV1，ECOLI1的文件），标注rejection percentage和f-measure，后面就是阈值从0.95到0.1（如果softmax<threshold就reject）的结果。